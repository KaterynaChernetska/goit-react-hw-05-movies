{"version":3,"file":"static/js/414.e1987b3e.chunk.js","mappings":"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","sources":["components/MovieListItem/MovieListItem.jsx","components/MovieList.jsx/MovieList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const MovieListItem = ({ moviesList }) => {\n    const location = useLocation();\n  return (\n    <>\n      {moviesList?.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nMovieListItem.propTypes = {\n    moviesList: PropTypes.array.isRequired\n  }","import { MovieListItem } from 'components/MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ moviesList }) => {\n  return (\n    <ul>\n      <MovieListItem moviesList={moviesList} />\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  moviesList: PropTypes.array.isRequired\n}","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ handleFormSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const searchMovie = searchParams.get('title');\n  const [searchQuery, setSearchQuery] = useState(searchMovie ?? '');\n\n  const handleInput = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleFormSubmit(searchQuery);\n  };\n  return (\n    <div>\n      {' '}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter movie name\"\n          name=\"title\"\n          value={searchQuery}\n          onChange={handleInput}\n        />\n        <button>Search</button>\n      </form>\n    </div>\n  );\n};\nForm.propTypes = {\n  handleFormSubmit: PropTypes.func.isRequired,\n};\n","import { Form } from 'components/Form/Form';\nimport { MovieList } from 'components/MovieList.jsx/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchedMovie } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const serchQuery = searchParams.get('title');\n\n  useEffect(() => {\n    const fetchSearchedMovies = async () => {\n      try {\n        const { results } = await getSearchedMovie(serchQuery);\n        const filteredResults = results.map(({ title, id }) => ({ title, id }));\n        setMovies(filteredResults);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSearchedMovies();\n  }, [serchQuery]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ title: query });\n  };\n\n  return (\n    <div>\n      <Form handleFormSubmit={handleFormSubmit} />\n      <MovieList moviesList={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRANDING_URL = 'trending/movie/day';\nconst SEARCH_URL = 'search/movie';\nconst API_KEY = 'a40e5d81f1df224d1622e425c6565c72';\n\nexport const trendingMoviesFetch = async () => {\n  const { data } = await axios.get(`${BASE_URL}${TRANDING_URL}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getSearchedMovie = async searchedQuery => {\n  const { data } = await axios.get(`${BASE_URL}${SEARCH_URL}`, {\n    params: {\n      query: searchedQuery,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getActorsInfo = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n// export const pixabayApi = async (query, pageToFind) => {\n//     const { data } = await axios.get(`https://pixabay.com/api/`, {\n//       params: {\n//         image_type: 'photo',\n//         safesearch: 'true',\n//         orientation: 'horizontal',\n//         page: pageToFind,\n//         q: query,\n//         per_page: 12,\n//         key: '32848509-cba45cf412629684caa169d48',\n//       },\n//     });\n//     return data;\n//   };\n"],"names":["MovieListItem","moviesList","location","useLocation","map","movie","to","id","state","from","title","MovieList","Form","handleFormSubmit","useSearchParams","searchMovie","get","useState","searchQuery","setSearchQuery","onSubmit","event","preventDefault","type","placeholder","name","value","onChange","target","movies","setMovies","searchParams","setSearchParams","serchQuery","useEffect","fetchSearchedMovies","getSearchedMovie","results","filteredResults","console","log","query","BASE_URL","API_KEY","trendingMoviesFetch","axios","params","api_key","data","searchedQuery","getMovieInfo","movieId","getActorsInfo","getReviews"],"sourceRoot":""}