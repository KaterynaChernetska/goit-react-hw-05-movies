{"version":3,"file":"static/js/76.286929af.chunk.js","mappings":"6PACA,EAAsB,kBAAtB,EAA+C,mBAA/C,EAAyE,mB,SCsDzE,EAhDa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAKC,OAAOH,IAElBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBN,GAAa,GADG,mBAGSO,EAAAA,EAAAA,IAAcJ,GAHvB,gBAGNK,EAHM,EAGNA,KACRZ,EAAUY,GAJI,gDAMdV,EAAS,KAAMW,SAND,yBAQdT,GAAa,GARC,4EAAH,qDAWfM,GACD,GAAE,CAACH,IAGJ,OACE,gCACGJ,IAAa,SAACW,EAAA,EAAD,IACH,OAAVb,IAAkB,iEAAyCA,MAC5D,eAAIc,UAAWC,EAAf,SACGjB,EAAOkB,OAAS,EACblB,EAAOmB,KAAI,SAAAC,GAAI,OACb,gBAAuBJ,UAAWC,EAAlC,WACE,gBACED,UAAWC,EACXI,IAXY,kCAWeD,EAAKE,aAChCC,IAAKH,EAAKI,QAEZ,0BAAOJ,EAAKI,QACZ,0CACcJ,EAAKK,UAAYL,EAAKK,UAAY,eARzCL,EAAKM,QADD,IAaf,4CAIX,C,+LCnDKC,EAAW,gCAGXC,EAAU,mCAEHC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OALJ,sBAK4C,CAC7DI,OAAQ,CACNC,QAASJ,KAHoB,uBACzBK,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,qDASnBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAbN,gBAa4C,CAC3DI,OAAQ,CACNK,MAAOD,EACPH,QAASJ,KAJiB,uBACtBK,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBI,EAAY,mCAAG,WAAM/B,GAAN,yFACHwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BrB,GAAW,CAC/DyB,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZrB,EAAa,mCAAG,WAAMN,GAAN,yFACJwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BrB,EAA/B,YAAkD,CACvEyB,OAAQ,CACNC,QAASJ,KAHc,uBACnBK,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,sDASbK,EAAU,mCAAG,WAAMhC,GAAN,yFACDwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BrB,EAA/B,YAAkD,CACvEyB,OAAQ,CACNC,QAASJ,KAHW,uBAChBK,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"item\":\"Cast_item__a0CDL\",\"list\":\"Cast_list__GlWio\"};","import PropTypes from 'prop-types';\nimport { getActorsInfo } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const id = Number(movieId);\n\n  useEffect(() => {\n    const getActors = async () => {\n      setIsLoading(true);\n      try {\n        const { cast } = await getActorsInfo(id);\n        setActors(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getActors();\n  }, [id]);\n\n  const BASE_URL_FOR_IMAGES = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... Message: {error}</p>}\n      <ul className={css.list}>\n        {actors.length > 0\n          ? actors.map(item => (\n              <li key={item.cast_id} className={css.item}>\n                <img\n                  className={css.img}\n                  src={BASE_URL_FOR_IMAGES + item.profile_path}\n                  alt={item.name}\n                />\n                <span>{item.name}</span>\n                <span>\n                  Character: {item.character ? item.character : 'Unknown'}\n                </span>\n              </li>\n            ))\n          : 'There are no information about actors'}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRANDING_URL = 'trending/movie/day';\nconst SEARCH_URL = 'search/movie';\nconst API_KEY = 'a40e5d81f1df224d1622e425c6565c72';\n\nexport const trendingMoviesFetch = async () => {\n  const { data } = await axios.get(`${BASE_URL}${TRANDING_URL}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getSearchedMovie = async searchedQuery => {\n  const { data } = await axios.get(`${BASE_URL}${SEARCH_URL}`, {\n    params: {\n      query: searchedQuery,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getActorsInfo = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n// export const pixabayApi = async (query, pageToFind) => {\n//     const { data } = await axios.get(`https://pixabay.com/api/`, {\n//       params: {\n//         image_type: 'photo',\n//         safesearch: 'true',\n//         orientation: 'horizontal',\n//         page: pageToFind,\n//         q: query,\n//         per_page: 12,\n//         key: '32848509-cba45cf412629684caa169d48',\n//       },\n//     });\n//     return data;\n//   };\n"],"names":["useState","actors","setActors","error","setError","isLoading","setIsLoading","movieId","useParams","id","Number","useEffect","getActors","getActorsInfo","cast","message","Loader","className","css","length","map","item","src","profile_path","alt","name","character","cast_id","BASE_URL","API_KEY","trendingMoviesFetch","axios","params","api_key","data","getSearchedMovie","searchedQuery","query","getMovieInfo","getReviews"],"sourceRoot":""}