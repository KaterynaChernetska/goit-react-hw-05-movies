{"version":3,"file":"static/js/168.c217b84c.chunk.js","mappings":"+PACA,EAA8B,6BAA9B,EAAkE,sB,SCwClE,EAjCiB,WACb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,EAAKC,OAAOH,GAmBlB,OAhBAI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,6FACnBN,GAAa,GADM,mBAGMO,EAAAA,EAAAA,IAAWJ,GAHjB,gBAGVK,EAHU,EAGVA,QACPZ,EAAWY,GAJM,gDAMjBV,EAAS,KAAMW,SANE,yBAQjBT,GAAa,GARI,4EAAH,qDAWlBM,GACD,GAAE,CAACH,KAGE,2BACNJ,IAAa,SAACW,EAAA,EAAD,IACH,OAAVb,IAAkB,iEAAyCA,MACjE,wBACKF,EAAQgB,OAAS,EAAIhB,EAAQiB,KAAI,SAAAC,GAAI,OAAG,gBAAkBC,UAAWC,EAA7B,WAA8C,kBAAMD,UAAWC,EAAjB,qBAAoCF,EAAKG,WAChI,0BAAOH,EAAKI,YADsCJ,EAAKV,GAAjB,IACF,2BAGvC,C,+LCtCKe,EAAW,gCAGXC,EAAU,mCAEHC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OALJ,sBAK4C,CAC7DI,OAAQ,CACNC,QAASJ,KAHoB,uBACzBK,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,qDASnBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAbN,gBAa4C,CAC3DI,OAAQ,CACNK,MAAOD,EACPH,QAASJ,KAJiB,uBACtBK,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBI,EAAY,mCAAG,WAAM3B,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BjB,GAAW,CAC/DqB,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZK,EAAa,mCAAG,WAAM5B,GAAN,yFACJoB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BjB,EAA/B,YAAkD,CACvEqB,OAAQ,CACNC,QAASJ,KAHc,uBACnBK,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,sDASbjB,EAAU,mCAAG,WAAMN,GAAN,yFACDoB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BjB,EAA/B,YAAkD,CACvEqB,OAAQ,CACNC,QAASJ,KAHW,uBAChBK,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsItem\":\"Reviews_reviewsItem__Su53A\",\"name\":\"Reviews_name__kx3f+\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport {getReviews} from '../../services/api';\nimport css from './Reviews.module.css';\nimport PropTypes from 'prop-types';\n\n\n const Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const {movieId} = useParams();\n    const id = Number(movieId);\n  \n\n    useEffect(() => {\n        const fetchReviews = async () => {\n          setIsLoading(true);\n          try {\n            const {results}= await getReviews(id);\n            setReviews(results);\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        fetchReviews();\n      }, [id]);\n\n\n    return (<div>\n     {isLoading && <Loader />}\n     {error !== null && <p>Oops, some error occured... Message: {error}</p>}\n<ul>\n    {reviews.length > 0 ? reviews.map(item=> <li key={item.id} className={css.reviewsItem}><span className={css.name}>Author: {item.author}</span>\n    <span>{item.content}</span></li>) : 'There are no reviews'}\n</ul>\n    </div>)\n}\nexport default Reviews;\n\nReviews.propTypes = {\n    movieId: PropTypes.string\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRANDING_URL = 'trending/movie/day';\nconst SEARCH_URL = 'search/movie';\nconst API_KEY = 'a40e5d81f1df224d1622e425c6565c72';\n\nexport const trendingMoviesFetch = async () => {\n  const { data } = await axios.get(`${BASE_URL}${TRANDING_URL}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getSearchedMovie = async searchedQuery => {\n  const { data } = await axios.get(`${BASE_URL}${SEARCH_URL}`, {\n    params: {\n      query: searchedQuery,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getActorsInfo = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n// export const pixabayApi = async (query, pageToFind) => {\n//     const { data } = await axios.get(`https://pixabay.com/api/`, {\n//       params: {\n//         image_type: 'photo',\n//         safesearch: 'true',\n//         orientation: 'horizontal',\n//         page: pageToFind,\n//         q: query,\n//         per_page: 12,\n//         key: '32848509-cba45cf412629684caa169d48',\n//       },\n//     });\n//     return data;\n//   };\n"],"names":["useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","id","Number","useEffect","fetchReviews","getReviews","results","message","Loader","length","map","item","className","css","author","content","BASE_URL","API_KEY","trendingMoviesFetch","axios","params","api_key","data","getSearchedMovie","searchedQuery","query","getMovieInfo","getActorsInfo"],"sourceRoot":""}